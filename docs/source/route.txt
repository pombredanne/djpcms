.. module:: djpcms

=========================
Web site and routes
=========================

To build a djpcms managed web site you need an instance of :class:`Site`::

    import djpcms
    
    sites = djpcms.Site()


Site
===========================

.. autoclass:: Site
   :members:
   :member-order: bysource
   
   

Route
===========================

.. autoclass:: Route
   :members:
   :member-order: bysource



RouteMixin
===========================

.. autoclass:: RouteMixin
   :members:
   :member-order: bysource
      
      

ResolverMixin
===========================

.. autoclass:: ResolverMixin
   :members:
   :member-order: bysource


.. _site-handlers:

Site handlers
============================

.. _permissions:

Permissions
~~~~~~~~~~~~~~~~~~~~~~~

.. autoclass:: PermissionHandler
   :members:
   :member-order: bysource


.. _authentication:

Authentication
~~~~~~~~~~~~~~~~~~~~~~~
Authentication backends are used by :ref:`permissions <permissions>` handlers
to authenticate users.

An authentication backend must implement the following methods:

* ``authenticate``
* ``login``
* ``logout``


.. _response-site-handler:

Response
~~~~~~~~~~~~~~~~~~~~~~~


Errors
~~~~~~~~~~~~~~~~~~~~~~~


Robots
~~~~~~~~~~~~~~~~~~~~~~~


WSGI
=========================

.. automodule:: djpcms.core.http

Request
~~~~~~~~~~~~~~~~~~~

.. autoclass:: Request
   :members:
   :member-order: bysource
   
   
Response
~~~~~~~~~~~~~~~~~~~

.. autoclass:: Response
   :members:
   :member-order: bysource
   

.. module:: djpcms.core.page

.. _page-blocks:

Pages and blocks
=========================

Page
~~~~~~~~~~~~~~~~~

.. autoclass:: Page
   :members:
   :member-order: bysource
   
   
Block
~~~~~~~~~~~~~~~~~

.. autoclass:: Block
   :members:
   :member-order: bysource
