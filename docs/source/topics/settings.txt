.. _topics-settings:

==========================
Full list of settings
==========================

.. module:: djpcms.settings

A Django settings file doesn't have to define any djpcms settings if it doesn't need
to. Each setting has a sensible default value. These defaults live in the
module :file:`djpcms/settings.py`.

Here's a full list of all available settings, in alphabetical order, and their
default values.


.. setting:: APPLICATION_URL_MODULE

APPLICATION_URL_MODULE
---------------------------------
default: ``None``

The python dotted path to the application urls module.
This module is where applications can be registered to the site.
If not provided, no dynamic application will be available.


.. setting:: DJPCMS_MARKUP_MODULE

DJPCMS_MARKUP_MODULE
-------------------------

default: ``'djpcms.utils.markups'``

Python dotted path to the markup module. This module exposes four functions:


.. setting:: DJPCMS_PLUGINS

DJPCMS_PLUGINS
----------------------

Default: ``['djpcms.plugins.*]``

A list of python dotted paths to where plugins are defined.



.. setting:: DJPCMS_PLUGIN_BASE_URL

DJPCMS_PLUGIN_BASE_URL
------------------------

Default: ``'/plugin/'``

String used as base url when constructing plugin urls. Make sure to use a trailing slash, and to have
this be different from any other url you may use in your application.


See: :ref:`topics-plugins-url`



.. setting:: DEFAULT_VIEW_MODULE

DEFAULT_VIEW_MODULE
----------------------

Default: ``djpcms.views.pageview.pageview``

The python dotted path to the default python class used to handle view requests.



.. setting:: HTML_CLASSES

HTML_CLASSES
----------------

Default: ``djpcms.ajaxhtml.ajaxhtml()``

Instance of djpcms.ajaxhtml.ajaxhtml. It contains a dictionary of css classes which may define particular
javascript decorators or simple css styling.

See: :ref:`topics-javascript-index`



.. setting:: SERVE_STATIC_FILES

SERVE_STATIC_FILES
----------------------

Default: ``True``

Whether static files are served by the server running the Django site (and therefore included in the urls) or not.

It should be set to True only during development.



.. setting:: CONTENT_INLINE_EDITING

CONTENT_INLINE_EDITING
-------------------------

Dictionary of information for inline content editing, by default it is set for no editing::

	CONTENT_INLINE_EDITING = {
				'available': False,
				'preurl': 'edit',
				'permission': None,
				'pagecontent': '/content/',
				'width': 600,
				'height': 400
				}

The ``pagecontent`` key define the base url for editing page contents. It should contains trailing slashes.
A :ref:`topics-models-page` object with url given by ``pagecontent`` needs to be created if ``available`` is set to True.
Otherwise an error will occur. 



.. setting:: ENABLE_BREADCRUMBS

ENABLE_BREADCRUMBS
-------------------------
Default: ``1``

If set to 0, no bread crumbs support, otherwise it indicates from which level to start generating
bread-crumbs (usually 1 or 2).


.. setting:: GRID960_DEFAULT_FIXED

GRID960_DEFAULT_FIXED
--------------------------
Default: ``True``

If set to True (the default), the grid 960 layout is fixed at 960px, otherwise is floating to the whole page.
See `960 grid system <http://960.gs/>`_ and `fluid 960 grid system <http://www.designinfluences.com/fluid960gs/>`_ 


.. setting:: GOOGLE_ANALYTICS_ID

GOOGLE_ANALYTICS_ID
-------------------------
Default: ``None``

ID for Google Analytics.

